<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


   <!-- jdbctemplatexml.xml
    연결설정... 기존의 connection과는 다름
    xml에 기록한다(반복설정을 피할수있음)-->


    <!--datasource    cf.connection pool      여기는 Connection class-->
    <bean id="dataSourceBean" class="org.springframework.jdbc.datasource.DriverManagerDataSource"> <!--connectionpool을 가능하게 해주는 jar파일-->
        <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
        <property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
        <property name="username" value="hr"/>
        <property name="password" value="hr"/>
    </bean>
    <!--한번만 선언해놓으면 계속 가져다 쓸수 있음-->
    <!--이때 SPRING JDBC가 필요해진다.-->

    <bean id="sawonVOBean" class="helloProcess3.SawonVO">
    </bean>


    <!--you must remember!!!! JdbcTemplate   여기는 Connection 객체-->
    <bean id="jdbcTemplateBean" class="org.springframework.jdbc.core.JdbcTemplate"> <!--스프링 자체의 DB클래스-->
        <property name="dataSource" ref="dataSourceBean"/>
    </bean>


    <!--커넥션을 datasource >> JdbcTemplate >> SawonDAO에 적용-->
    <!--SawonDAO에는 spring DB인 JdbcTemplate를 사용할 수 있다-->
    <bean id="sawonDAOBean" class="helloProcess3.SawonDAO">
        <property name="jdbcTemplate" ref="jdbcTemplateBean"/>
        <!--이곳의 property이름은 DAO 의 setter에의해 자동으로 감지된다-->
        <!--setJdbcTemplate()이므로
        SawonDAO에서 만들때 getter/setter 만들고
        setJt1()이 되므로 직접 입력한다
        -->
    </bean>
                    <!--
                    SawonDAO에 jdbcTemplate적용
                    SawonDAO sawonDAOBean = new SawonDAO()
                    -->



    <!--connection pool  C3P0를 사용했을경우의 Bean-->
   <!--
    <bean id="dataSource"
          class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close">
        <property name="driverClass" value="org.gjt.mm.mysql.Driver" />
        <property name="jdbcUrl" value="jdbc:mysql://localhost/testdb" />
        <property name="user" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <property name="initialPoolSize" value="5" />
        <property name="maxPoolSize" value="30" />
        <property name="minPoolSize" value="5" />
        <property name="acquireIncrement" value="3" />
        <property name="acquireRetryAttempts" value="30" />
        <property name="acquireRetryDelay" value="1000" />
        <property name="idleConnectionTestPeriod" value="60" />
        <property name="preferredTestQuery" value="SELECT 1" />
        <property name="testConnectionOnCheckin" value="true" />
        <property name="testConnectionOnCheckout" value="false" />
    </bean>
-->


    <!--connection pool DBCP 이용했을경우-->
<!--
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName"


                  value="oracle.jdbc.driver.OracleDriver"/>
        <property name="url" value="jdbc:oracle:thin:@127.0.0.1:1521:orcl"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="defaultAutoCommit" value="true"/>
        <property name="initialSize" value="5"/>
        <property name="maxActive" value="30"/>
        <property name="maxIdle" value="5"/>
        <property name="maxWait" value="30000"/>
        <property name="validationQuery" value="SELECT 1 FROM DUAL"/>
        <property name="testOnBorrow" value="true"/>
        <property name="testOnReturn" value="false"/>
        <property name="testWhileIdle" value="true"/>
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
    </bean>


-->



</beans>

